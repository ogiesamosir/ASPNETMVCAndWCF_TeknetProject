//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASPNETMVCAndWCF.ProductService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/MyWcfService")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetailProduct", Namespace="http://schemas.datacontract.org/2004/07/MyWcfService")]
    [System.SerializableAttribute()]
    public partial class DetailProduct : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductService.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/findAll", ReplyAction="http://tempuri.org/IProductService/findAllResponse")]
        ASPNETMVCAndWCF.ProductService.Product[] findAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/findAll", ReplyAction="http://tempuri.org/IProductService/findAllResponse")]
        System.Threading.Tasks.Task<ASPNETMVCAndWCF.ProductService.Product[]> findAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/find", ReplyAction="http://tempuri.org/IProductService/findResponse")]
        ASPNETMVCAndWCF.ProductService.Product[] find(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/find", ReplyAction="http://tempuri.org/IProductService/findResponse")]
        System.Threading.Tasks.Task<ASPNETMVCAndWCF.ProductService.Product[]> findAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductDetails", ReplyAction="http://tempuri.org/IProductService/GetProductDetailsResponse")]
        ASPNETMVCAndWCF.ProductService.DetailProduct[] GetProductDetails(string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductDetails", ReplyAction="http://tempuri.org/IProductService/GetProductDetailsResponse")]
        System.Threading.Tasks.Task<ASPNETMVCAndWCF.ProductService.DetailProduct[]> GetProductDetailsAsync(string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/findByDate", ReplyAction="http://tempuri.org/IProductService/findByDateResponse")]
        ASPNETMVCAndWCF.ProductService.Product[] findByDate(System.DateTime CreationDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/findByDate", ReplyAction="http://tempuri.org/IProductService/findByDateResponse")]
        System.Threading.Tasks.Task<ASPNETMVCAndWCF.ProductService.Product[]> findByDateAsync(System.DateTime CreationDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/InsertProductDetail", ReplyAction="http://tempuri.org/IProductService/InsertProductDetailResponse")]
        string InsertProductDetail(ASPNETMVCAndWCF.ProductService.DetailProduct ProductDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/InsertProductDetail", ReplyAction="http://tempuri.org/IProductService/InsertProductDetailResponse")]
        System.Threading.Tasks.Task<string> InsertProductDetailAsync(ASPNETMVCAndWCF.ProductService.DetailProduct ProductDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProduct", ReplyAction="http://tempuri.org/IProductService/UpdateProductResponse")]
        bool UpdateProduct(ASPNETMVCAndWCF.ProductService.DetailProduct ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProduct", ReplyAction="http://tempuri.org/IProductService/UpdateProductResponse")]
        System.Threading.Tasks.Task<bool> UpdateProductAsync(ASPNETMVCAndWCF.ProductService.DetailProduct ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        bool DeleteProduct(int ProductInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        System.Threading.Tasks.Task<bool> DeleteProductAsync(int ProductInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : ASPNETMVCAndWCF.ProductService.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<ASPNETMVCAndWCF.ProductService.IProductService>, ASPNETMVCAndWCF.ProductService.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ASPNETMVCAndWCF.ProductService.Product[] findAll() {
            return base.Channel.findAll();
        }
        
        public System.Threading.Tasks.Task<ASPNETMVCAndWCF.ProductService.Product[]> findAllAsync() {
            return base.Channel.findAllAsync();
        }
        
        public ASPNETMVCAndWCF.ProductService.Product[] find(int id) {
            return base.Channel.find(id);
        }
        
        public System.Threading.Tasks.Task<ASPNETMVCAndWCF.ProductService.Product[]> findAsync(int id) {
            return base.Channel.findAsync(id);
        }
        
        public ASPNETMVCAndWCF.ProductService.DetailProduct[] GetProductDetails(string ProductName) {
            return base.Channel.GetProductDetails(ProductName);
        }
        
        public System.Threading.Tasks.Task<ASPNETMVCAndWCF.ProductService.DetailProduct[]> GetProductDetailsAsync(string ProductName) {
            return base.Channel.GetProductDetailsAsync(ProductName);
        }
        
        public ASPNETMVCAndWCF.ProductService.Product[] findByDate(System.DateTime CreationDate) {
            return base.Channel.findByDate(CreationDate);
        }
        
        public System.Threading.Tasks.Task<ASPNETMVCAndWCF.ProductService.Product[]> findByDateAsync(System.DateTime CreationDate) {
            return base.Channel.findByDateAsync(CreationDate);
        }
        
        public string InsertProductDetail(ASPNETMVCAndWCF.ProductService.DetailProduct ProductDetail) {
            return base.Channel.InsertProductDetail(ProductDetail);
        }
        
        public System.Threading.Tasks.Task<string> InsertProductDetailAsync(ASPNETMVCAndWCF.ProductService.DetailProduct ProductDetail) {
            return base.Channel.InsertProductDetailAsync(ProductDetail);
        }
        
        public bool UpdateProduct(ASPNETMVCAndWCF.ProductService.DetailProduct ProductID) {
            return base.Channel.UpdateProduct(ProductID);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProductAsync(ASPNETMVCAndWCF.ProductService.DetailProduct ProductID) {
            return base.Channel.UpdateProductAsync(ProductID);
        }
        
        public bool DeleteProduct(int ProductInfo) {
            return base.Channel.DeleteProduct(ProductInfo);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProductAsync(int ProductInfo) {
            return base.Channel.DeleteProductAsync(ProductInfo);
        }
    }
}
